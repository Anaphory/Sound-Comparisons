2014-03-06:
 - Tried site performance with hhvm-nightly.
   apach2+php: Times (min, avg, max): 2.0196, 3.0096589473684, 5.4663
   hhvm:       Times (min, avg, max): 0.7163, 2.7047795918367, 6.4519
   It appears that hhvm is a better choice than php,
   but the database still makes for much slowdown.
 - Prepared statements offer inherent problems with dynamic tables.
   This is sad, because I'd like to use them.
 - With the stopwatch I found out,
   that about 3.4s (< 50%) are used on sorting words for
   http://127.0.0.1/shk/main/?study=Mapudungun&languages=Huilliche%20%28Lagos%29&pageView=languageView&hl=en&wo_order=alphabetical&wo_phLang=Ancestral%20Mapudungun
   If I could use a view to sort words,
   or some other, smart method,
   this could increase performance by a leap.

2014-02-27:
 - Ask Paul which fields he'd like to be in .csv exports.

2014-02-20:
 - Make filtering in wordlist faster if possible

2014-02-13:
 - Up to ~1.6s are spent on a call of Study:getWords,
   which means, that up to ~3s of site generation could be spent this way.
   Look at http://127.0.0.1/shk/main/?study=Mapudungun&languages=Huilliche%20%28Lagos%29&pageView=languageView&hl=en&wo_order=alphabetical&wo_phLang=Ancestral%20Mapudungun
   - It just took 8.2493s to generate.
 - export/csv.php is the last pice to use database/Transcription:getNotCognates,
   it could be cleaned up, if csv.php was rewritten.
 - Show lexeme numbers >1 as subscripts for Transcriptions and Words
 - Contributors on page for translations would be nice
   - But we need a way of building this

2013-12-11:
 - Zooming in on the map when changing stuff is annoying, Paul wants it gone.
   - Check if the MapView can start zoomed in, or build it all with Backbone.

2013-11-12:
 - Build the Website as a dynamic .js application,
   so that many changes happen faster.
   Try to share templates between the App and the Serverside,
   so that php can still generate pages.

2013-11-07:
 - Allow html or something thelike of about pages
 - Add in a home button (before 'view by')
   - Build something to allow for paul to add content

2013-10-04:
 - github.com/clld
   - We'd like to use their format, but we don't wanna loose our special presentation features.
   - This is to be kept in mind as an interesting thing.

2013-09-19:
 - Learn about Zotero
 - Let map remember location when switching words
   - This already implies building a bigger part of the site
     as a .js application.

2013-09-13:
 - Move 'view by' with tabs in topmenu to the middle.
   - This is no easy task (thinking of smaller screens and the hell of horizontal alignment)
   - I could try and do this with .js, but that wouldn't be a nice solution.

2013-09-11:
 - It appears in mapview, that if 'my selection' equals 'all languages',
   the buttons to change between them are pretty useless.

2013-08-01:
 - Introduce seperate cells for items that have different variants with subscript
   - in 1w,1l and probably even lw and wl views
 - Later on:
   - Use Chromium Developer Tools -> Audit to streamline .css
     - Leverage this to get rid of style.css, because we've got main.css now
   - Refine database/Language.php:getDescription
     - Also think about the way it's included in the Tabulator.php:languageHeadline

From myself:
 - IsHtml field can be removed from v4.Page_StaticTranslation
   - This will need adjustment in different places

Using 'My Selection' in mapView removes all languages from the map
  where it should switch to the last selection

Füge spezielle Fehlerseiten hinzu.

The Language Set collapse/expand box doesn't behave correctly.
 - It deletes selected languages somehow, and I don't know where/how o.O
 - Maybe it does so in Init functions of the PageView…

Storing of mySelection in Mapview and in TopMenu between views
 - this will need a good solution
 - Keep word between wordview and mapview

-- Long term notes:
 - Think about splitting off all queries into the database dir, so that it's easier to grasp them all.
   - Introduce a general dbaccess class that handles all issues not handled by any of the other classes.
     This will also come in handy once another db with a different layout is included.
 - Think about a smaller/faster/better vm client os than XUbuntu
   - This way Paul would have a nicer time working with it
   - This could already use github to pull stuff from
   - I should base this on debian testing/stable
